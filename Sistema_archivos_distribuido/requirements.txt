Ahora vamos a construir un nuevo proyecto con la mayoria de utulidades, un servicio de directorio distribuido.

- Al iniciar el servidor, este deberá construir la lista dinámica de todos los archivos compartidos de los equipos, verificando que se encuentren disponibles (Puede usarse úna lista única o múltiples listas)

- Dado que cada entrada de la lista de compartidos tienen un ttl, un hilo se encargará de confirmar que el registro sigue disponible si no lo está deberá:

+ Si todos los demás servidores de nombres encuentran que ya no está, entonces borralo de la lista y escribirlo en el log

+ Si alguno de los servidores de nombres pudiera dar una respuesta autoritativa (es decir, que tiene al archivo) entonces actualizar la lista indicando un cambio de dueño y enviar una entrada al log

+ Si un registro de la lista tiene un TTL=0, significa que siempre estará disponible y no deberá ser actualizado

- Cuando se comparta un nuevo elemento, el servidor del equipo que lo contenga debe publicar la entrada a los demás equipos del sistema, esta entrada será autoritativa, los demás equipos agregarán la entrada a su lista y una notificación al log

- Un cliente puede hacer tres tipos de peticiones:

+ Solicitar información de un archivos en especifico

+ Solicitar la lista completa de archivos compartidos del servidor

+ Utilizar el archivo (lectura y escritura)

- Un server, al recibir la petición de un archivo puede:

+ Devolver el conjunto de atributos del archivo, nombre, extensión, tamaño, fecha de creación y fecha de modificación, TTL, La respuesta es autoritativa

+ Devolver la IP del dueño del archivo, la respuesta no es autoritativa

+ Responder NACK, la respuesta no es autoritativa

+ En cualquier cosa, se actualiza el log

- Cuando el cliente recibe una respuesta:

+ Si es autoritativa, actualiza su lista de archivos y hace una notación al log

+ Si es no autorativa, solicita la información del archivo al dueño del archivo y hace una entrada al log

+ Si es NACK, pregunta a otro servidor en la red

- Cuando el cliente recibe una respuesta no autorativa:

+ Solicita información del archivo al dueño del archivo:

* Si recibe una respuesta afirmativa autoritaria, actualiza su tabla y hace una entrada al log

* Si recibe una respuesta negatiba autoritaria, envía un mensaje al server que le envio una respuesta no autoritaria y este actualiza su tabla y hace una entrada al log.

* El proceso termina hasta que, reciba una respuesta autoritativa o ninguno de los servidores conozca al archivo

- La petición de la lista del directorio distribuido debe ser respondida de forma por solicitud del usuario

- Al recibir una petición de utilizar un archivo, el servidor:

+ Si es el propietario, dará el acceso

+ Si no es el propietario, implementará una politica de repositorio, es decir, solicitará una copia al propietario y la mantendra como local para el cliente que se lo solicito, implementando un patrón de unit of work. La copia se hará mediante la implementación de las prácticas anteriores

+ Al terminar de utilizarlo deberá sincronizar los cambios con el archivo original. Las colisiones deberán ser resueltas por el dueño original del archivo por marcas de tiempo si no hubo cambios entonces no deberá enviar nada. En cualquier caso, al terminar de utilizar una copia local, debe eliminarse del sistema

+ El dueño original del archivo deberá mantener un registro de cuáles archivos fueron solicitados para identificar posibles conflictos

- Implementar un cliente que permita visualizar el contenido del directorio distribuido, siguiendo el principio de diseño de transparencia, y seleccionar cualquier archivo para visualizarlo y editarlo (los archivos son de texto plano)

- Implementar una herramienta de visualización que permita seguir la actualización de los logs involucrados en todos los servers y clientes del sistema e identificar en los logs la traza de alguna operación (Por ejemplo: leer un archivo y ver todas la operaciones de todos los módulos involucrados) 
